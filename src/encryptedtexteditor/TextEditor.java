/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encryptedtexteditor;

import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.AbstractAction;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.JTextComponent;
import javax.swing.text.Utilities;
import javax.swing.undo.CannotUndoException;
import javax.swing.undo.UndoManager;

/**
 *
 * @author Pumkin
 */
public class TextEditor extends javax.swing.JFrame {
    
    //Attributes
    private Encryption encrypt;
    
    //Constructor
    public TextEditor(Encryption encrypt) {
        this.encrypt= encrypt;
        initComponents();
        final UndoManager undo = new UndoManager();
        Document doc = this.TxtArea.getDocument();
    
        //Add Undo text properties    
        // Listen for undo events
        doc.addUndoableEditListener((UndoableEditEvent evt) -> {
                boolean addEdit = undo.addEdit(evt.getEdit());
        });

        //Create an undo action
        this.TxtArea.getActionMap().put("Undo",
        new AbstractAction("Undo") {
            @Override
            public void actionPerformed(ActionEvent evt) {
                try {
                    if (undo.canUndo()) {
                        undo.undo();
                    }
                } catch (CannotUndoException e) {
                }
            }
        });
        //Add Crtl Z has undo
        this.TxtArea.getInputMap().put(KeyStroke.getKeyStroke("control Z"), "Undo");

        //Get Colomn and Row for text cursor
        CaretListener cl = (CaretEvent e1) -> {
                updateRowCol(getRow(e1.getDot(), (JTextComponent) e1.getSource()), getColumn(e1.getDot(), (JTextComponent) e1.getSource()));
            };
        this.TxtArea.addCaretListener(cl);

    }
    
    //Setters
    public void setEncrypt(Encryption encrypt) {
        this.encrypt = encrypt;
    }
    
    private void updateRowCol(int linenumber, int columnnumber) {
        this.RowColTxt.setText("Line: " + linenumber + " Column: " + columnnumber);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TxtArea = new javax.swing.JTextArea();
        RowColTxt = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        OpenTxt = new javax.swing.JMenuItem();
        SaveTxt = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        SelectAllTxt = new javax.swing.JMenuItem();
        CutTxt = new javax.swing.JMenuItem();
        CopyTxt = new javax.swing.JMenuItem();
        PasteTxt = new javax.swing.JMenuItem();
        EncryptMenu = new javax.swing.JMenu();
        EncryptionSettings = new javax.swing.JMenuItem();
        HelpMenu = new javax.swing.JMenu();
        AboutMsg = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TxtArea.setColumns(20);
        TxtArea.setRows(5);
        jScrollPane1.setViewportView(TxtArea);

        RowColTxt.setEditable(false);
        RowColTxt.setText("Row: Col: ");

        FileMenu.setText("File");

        OpenTxt.setText("Open");
        OpenTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenTxtActionPerformed(evt);
            }
        });
        FileMenu.add(OpenTxt);

        SaveTxt.setText("Save");
        SaveTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveTxtActionPerformed(evt);
            }
        });
        FileMenu.add(SaveTxt);

        jMenuBar1.add(FileMenu);

        EditMenu.setText("Edit");

        SelectAllTxt.setText("Select All");
        SelectAllTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAllTxtActionPerformed(evt);
            }
        });
        EditMenu.add(SelectAllTxt);

        CutTxt.setText("Cut");
        CutTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CutTxtActionPerformed(evt);
            }
        });
        EditMenu.add(CutTxt);

        CopyTxt.setText("Copy");
        CopyTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyTxtActionPerformed(evt);
            }
        });
        EditMenu.add(CopyTxt);

        PasteTxt.setText("Paste");
        PasteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteTxtActionPerformed(evt);
            }
        });
        EditMenu.add(PasteTxt);

        jMenuBar1.add(EditMenu);

        EncryptMenu.setText("Encryption");

        EncryptionSettings.setText("Change Encryption Settings");
        EncryptionSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncryptionSettingsActionPerformed(evt);
            }
        });
        EncryptMenu.add(EncryptionSettings);

        jMenuBar1.add(EncryptMenu);

        HelpMenu.setText("Help");

        AboutMsg.setText("About");
        AboutMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutMsgActionPerformed(evt);
            }
        });
        HelpMenu.add(AboutMsg);

        jMenuBar1.add(HelpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
            .addComponent(RowColTxt)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RowColTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CutTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CutTxtActionPerformed
        this.TxtArea.cut();
    }//GEN-LAST:event_CutTxtActionPerformed

    private void OpenTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenTxtActionPerformed
        // Create an object of JFileChooser class 
        JFileChooser j = new JFileChooser("f:"); 

        // Invoke the showsOpenDialog function to show the save dialog 
        int r = j.showOpenDialog(null); 

        // If the user selects a file 
        if (r == JFileChooser.APPROVE_OPTION) { 
                // Set the label to the path of the selected directory 
                File fi = new File(j.getSelectedFile().getAbsolutePath()); 

                try { 
                        // String 
                        String s1 = "", sl = ""; 

                        // File reader 
                        FileReader fr = new FileReader(fi); 

                        // Buffered reader 
                        BufferedReader br = new BufferedReader(fr); 

                        // Initilize sl 
                        sl = br.readLine(); 
                        
                        //Decrypt sl
                        sl = this.encrypt.decryptTxt(sl);
                        
                        // Take the input from the file 
                        while ((s1 = br.readLine()) != null) { 
                                sl = sl + "\n" + s1; 
                        } 
                        
                        // Set the text 
                        this.TxtArea.setText(sl); 
                } 
                catch (Exception ex) { 
                        JOptionPane.showMessageDialog(this, ex.getMessage()); 
                } 
        } 
        // If the user cancelled the operation 
        else
                JOptionPane.showMessageDialog(this, "the user cancelled the operation");
    }//GEN-LAST:event_OpenTxtActionPerformed

    private void SaveTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveTxtActionPerformed
        // Create an object of JFileChooser class 
        JFileChooser j = new JFileChooser("f:"); 

        // Invoke the showsSaveDialog function to show the save dialog 
        int r = j.showSaveDialog(null); 

        if (r == JFileChooser.APPROVE_OPTION) { 

                //Create file
                File f = new File(j.getSelectedFile().getAbsolutePath()); 

                try { 
                        // Create a file writer
                        FileWriter wr = new FileWriter(f, false); 
                        BufferedWriter w = new BufferedWriter(wr); 
                        //Encryp text
                        String encryptedTxt = this.encrypt.encryptTxt(this.TxtArea.getText());
                        // Write
                        w.write(encryptedTxt); 
                        //Close
                        w.flush(); 
                        w.close(); 
                } 
                catch (IOException ex) { 
                        JOptionPane.showMessageDialog(this, ex.getMessage()); 
                } 
        } 
        // If the user cancelled the operation 
        else
                JOptionPane.showMessageDialog(this, "Operation was cancelled.");
    }//GEN-LAST:event_SaveTxtActionPerformed

    private void AboutMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutMsgActionPerformed
        JOptionPane.showMessageDialog(null, "ITCR\n" + 
                                            "Cryptografia\n" +
                                            "Estudiantes:\n" + 
                                            "Andres Obando\n" +
                                            "Jose Fabio Perez" +
                                            "2018");
    }//GEN-LAST:event_AboutMsgActionPerformed

    private void CopyTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyTxtActionPerformed
        this.TxtArea.copy();
    }//GEN-LAST:event_CopyTxtActionPerformed

    private void PasteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteTxtActionPerformed
        this.TxtArea.paste();
    }//GEN-LAST:event_PasteTxtActionPerformed

    private void SelectAllTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAllTxtActionPerformed
        this.TxtArea.selectAll();
    }//GEN-LAST:event_SelectAllTxtActionPerformed

    private void EncryptionSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncryptionSettingsActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog (null, "Changing your encryption method will close the text editor, "
                                                            + "make sure to save first. Would you like to continue?", 
                                                            "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(dialogResult == JOptionPane.YES_OPTION){
            EncryptionInit e = new EncryptionInit();
            e.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_EncryptionSettingsActionPerformed
    

    public static int getRow(int pos, JTextComponent editor) {
            int rn = (pos==0) ? 1 : 0;
            try {
                int offs=pos;
                while( offs>0) {
                    offs=Utilities.getRowStart(editor, offs)-1;
                    rn++;
                }
            } catch (BadLocationException e) {
                e.printStackTrace();
            }
            return rn;
        }

    public static int getColumn(int pos, JTextComponent editor) {
        try {
            return pos-Utilities.getRowStart(editor, pos)+1;
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
        return -1;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AboutMsg;
    private javax.swing.JMenuItem CopyTxt;
    private javax.swing.JMenuItem CutTxt;
    private javax.swing.JMenu EditMenu;
    private javax.swing.JMenu EncryptMenu;
    private javax.swing.JMenuItem EncryptionSettings;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenu HelpMenu;
    private javax.swing.JMenuItem OpenTxt;
    private javax.swing.JMenuItem PasteTxt;
    private javax.swing.JTextField RowColTxt;
    private javax.swing.JMenuItem SaveTxt;
    private javax.swing.JMenuItem SelectAllTxt;
    private javax.swing.JTextArea TxtArea;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
